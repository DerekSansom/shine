<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:security="http://www.springframework.org/schema/security"
	xmlns:p="http://www.springframework.org/schema/p"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
	   		http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
            http://www.springframework.org/schema/security 
            http://www.springframework.org/schema/security/spring-security-3.1.xsd
            http://www.springframework.org/schema/context 
            http://www.springframework.org/schema/context/spring-context-3.0.xsd">


	<security:global-method-security
		secured-annotations="enabled" />

	<security:http pattern="/static/**" security="none" />

	<!-- security for restful -->
	
	<security:http pattern="/mw/json/**" auto-config="false" use-expressions="true"
		create-session="stateless"	entry-point-ref="restServicesEntryPoint">
		<security:custom-filter ref="authenticationTokenProcessingFilter" position="FORM_LOGIN_FILTER" />
	</security:http>

	<bean class="com.sp.auth.AuthenticationTokenProcessingFilter"
    		id="authenticationTokenProcessingFilter">
	</bean>


	<bean id="restAuthenticationFilter"
		class="org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter"
		p:authenticationManager-ref="portalAuthenticationService"
		p:authenticationFailureHandler-ref="customAuthenticationFailureHandler"
		p:authenticationSuccessHandler-ref="customAuthenticationSuccessHandler" />
		
		
	<!-- Entry point for REST service. -->
	<bean id="restServicesEntryPoint" class="com.sp.auth.RestAuthenticationEntryPoint" />
	<!-- Filter for REST services. -->
	<bean id="restServicesFilter" class="com.sp.auth.RestUsernamePasswordAuthenticationFilter">
		<property name="postOnly" value="false" />
		<property name="authenticationManager" ref="playerLoginService" />
		<property name="authenticationSuccessHandler" ref="restServicesSuccessHandler" />
	</bean>
	<!-- A handler for successful REST service authentication. -->
	<bean id="restServicesSuccessHandler" class="com.sp.auth.RestAuthenticationSuccessHandler" />

	<!-- security for portal -->

	<security:http auto-config="false" use-expressions="true"
		access-denied-page="/mw/portal/auth/denied" entry-point-ref="authenticationEntryPoint">
		<security:logout invalidate-session="true"
			logout-success-url="/mw/portal/auth/loggedout" logout-url="/mw/portal/auth/logout" />
		<security:custom-filter ref="authenticationFilter" position="FORM_LOGIN_FILTER" />
		<security:remember-me key="spAppKey" user-service-ref="portalAuthenticationService" />
	</security:http>

	<bean id="authenticationFilter"
		class="org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter"
		p:authenticationManager-ref="portalAuthenticationService"
		p:authenticationFailureHandler-ref="customAuthenticationFailureHandler"
		p:authenticationSuccessHandler-ref="customAuthenticationSuccessHandler" />

	<bean id="portalAuthenticationService" class="com.sp.security.PortalLoginService" />

	<bean id="customAuthenticationFailureHandler"
		class="org.springframework.security.web.authentication.SimpleUrlAuthenticationFailureHandler"
		p:defaultFailureUrl="/mw/portal/auth/loginfailed" />

	<bean id="customAuthenticationSuccessHandler"
		class="org.springframework.security.web.authentication.SavedRequestAwareAuthenticationSuccessHandler"
		p:defaultTargetUrl="/mw/portal" />

	<bean id="authenticationEntryPoint"
		class="org.springframework.security.web.authentication.LoginUrlAuthenticationEntryPoint"
		p:loginFormUrl="/mw/portal/auth/login" />

	<!-- The tag below has no use but Spring Security needs it to autowire the 
		parent property of org.springframework.security.authentication.ProviderManager. 
		Otherwise we get an error A probable bug. This is still under investigation -->
	<security:authentication-manager />
</beans>
